.anchor {
    position: absolute;
    width: 0;
    height: 0;
}

$angular-diameter: var(--angularDiameter);
$diameter: calc($angular-diameter * 5vmin); // enlarged for visual effect
$aura-radius: clamp(0px, calc($diameter * 10), 1px); // sf 10 seems to work well

.body {
  width: $diameter;
  height: $diameter;
  position: absolute;
  left: calc($diameter / -2);
  top: calc($diameter / -2);
  border-radius: 100%;
  background-color: var(--sky-color);
  * {
    position: inherit;
    height: 100%;
    width: 100%;
    border-radius: inherit;
  }
  .lit-half {
    @extend .lit;
    clip-path: inset(0 0 0 50%);
  }
  .meridean {
    clip-path: ellipse(var(--eclipse-width) 50% at 50% 50%);
    background-color: inherit;
  }
  .lit {
    background-color: var(--body-color);
    filter: brightness(calc(var(--albedo) * var(--albedo) * 180)); // arbitary number, looks decent
  }
}

.point {
  width: 0;
  height: 0;
  border-radius: 100%;
  box-shadow: white 0 0 $aura-radius $aura-radius;
  opacity: var(--point-opacity);
}

svg {
  position: absolute;
  bottom: 10vh;
  height: 90vmin;
  left: 0;
  width: 100vw;
  opacity: 20%;
}

polyline {
  stroke-width: 0.5;
  fill: none;
}
